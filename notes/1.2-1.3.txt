1.2 - 1.3 notes

How web applications works.

The common understanding of what web applications are, may not be as straightforward. Is a web service also a web application? Many would consider them different, primarily because web services are consumed by other software whereas web applications are used by humans.


In a purist sense, a web application is a computer program that responds to an HTTP request by a client and sends HTML back to the client in an HTTP response. Is not but what a webServer is? From this definition, there is no difference between a web server and a web application. The web server is the web application.
              (request)
[ client] -------->     [  server       ]
[           ] <-------  [               ]
            (response)


The only consideration is that the web server like httpd or Apache looks into a particular directory ( this would be docroot in Apache ) and returns files in that directory when requested.

In comparison, a web application doesn't simply return files; it processes the request and performs operations that are programmed in the application.
Web app requests, performs programmed operations, returns files.

The program must return HTML to a calling client that renders HTML and displays to a user/
The data must be transported to the client through HTTP.

If a program doesn't render HTML to a user but instead returns data in any other format to another program, it is a web service.

HTTP: is an application-level communications protocol that powers the WWW. Everything on a web page is transported through the simple HTTP.  It has gone through three iterative changes. 1.1 is the latest, 2.0 is in draft form.

A client-server computing model is one where the requester (the client) always initiates the conversation with the responder (the server) The server provides a service to the client.

In HTTP, the client is also known as the user-agent and is often a web browser. The server is often called the web server.

HTTP is a stateless protocol. Each request from the client to the server returns a response from the server to the client, and that's all the protocol. In comparison, connection-oriented protocols like FTP or Telnet (also request-response and client-server) create a persistent channel between the client and the server. HTTP 1.1 does persist connections to improve performance. HTPP 0.9 had only one method, i.e. GET.
